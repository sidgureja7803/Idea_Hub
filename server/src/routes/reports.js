import express from 'express';
import Idea from '../models/Idea.js';

const router = express.Router();

// Get full report
router.get('/report/:analysisId', async (req, res) => {
  try {
    const { analysisId } = req.params;
    
    const idea = await Idea.findOne({ id: analysisId });
    
    if (!idea) {
      return res.status(404).json({
        message: 'Report not found'
      });
    }

    res.json({
      id: idea.id,
      idea: {
        description: idea.description,
        category: idea.category,
        targetAudience: idea.targetAudience,
        problemSolved: idea.problemSolved
      },
      fullReport: idea.fullReport || '<p>Report is being generated...</p>',
      createdAt: idea.createdAt,
      status: idea.status
    });
  } catch (error) {
    console.error('Error fetching report:', error);
    res.status(500).json({
      message: 'Failed to fetch report',
      error: error.message
    });
  }
});

// Download report as PDF
router.get('/report/:analysisId/pdf', async (req, res) => {
  try {
    const { analysisId } = req.params;
    
    const idea = await Idea.findOne({ id: analysisId });
    
    if (!idea) {
      return res.status(404).json({
        message: 'Report not found'
      });
    }

    // TODO: Implement PDF generation
    // For now, return a placeholder
    res.setHeader('Content-Type', 'application/pdf');
    res.setHeader('Content-Disposition', `attachment; filename="startup-analysis-${analysisId}.pdf"`);
    res.status(501).json({
      message: 'PDF generation not implemented yet'
    });
  } catch (error) {
    console.error('Error generating PDF:', error);
    res.status(500).json({
      message: 'Failed to generate PDF',
      error: error.message
    });
  }
});

// Download report as Markdown
router.get('/report/:analysisId/markdown', async (req, res) => {
  try {
    const { analysisId } = req.params;
    
    const idea = await Idea.findOne({ id: analysisId });
    
    if (!idea) {
      return res.status(404).json({
        message: 'Report not found'
      });
    }

    // Convert HTML report to Markdown (simplified)
    const markdownContent = `# Startup Idea Analysis Report

**Analysis ID:** ${idea.id}
**Category:** ${idea.category}
**Date:** ${new Date(idea.createdAt).toLocaleDateString()}

## Your Idea

${idea.description}

## Problem Solved

${idea.problemSolved}

${idea.targetAudience ? `## Target Audience\n\n${idea.targetAudience}\n\n` : ''}

## Analysis Results

${idea.fullReport ? idea.fullReport.replace(/<[^>]*>/g, '') : 'Analysis in progress...'}

---

*Generated by IdeaHub - AI-Powered Startup Validation Platform*
`;

    res.setHeader('Content-Type', 'text/markdown');
    res.setHeader('Content-Disposition', `attachment; filename="startup-analysis-${analysisId}.md"`);
    res.send(markdownContent);
  } catch (error) {
    console.error('Error generating Markdown:', error);
    res.status(500).json({
      message: 'Failed to generate Markdown',
      error: error.message
    });
  }
});

export default router;
